
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // generated by `flutterfire configure` (keep as-is)

import 'providers/theme_provider.dart';
import 'screens/onboarding_screen.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Keep Firebase initialization as-is
  try {
    await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
    // ignore: avoid_print
    print('Firebase initialized');
  } catch (e, st) {
    // ignore: avoid_print
    print('Firebase initialization failed: $e');
    // ignore: avoid_print
    print(st);
  }

  runApp(
    ChangeNotifierProvider(
      create: (_) => ThemeProvider(), // simple provider instance
      child: const MyApp(),
    ),
  );
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    final themeProvider = Provider.of<ThemeProvider>(context);
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'NdalaFlow',
      theme: themeProvider.lightTheme,
      darkTheme: themeProvider.darkTheme,
      themeMode: themeProvider.themeMode,
      home: Builder(
        builder: (context) {
          return OnboardingScreen(
            onComplete: () {
              // Simple placeholder: navigate to a minimal HomeScreen
              Navigator.of(context).pushReplacement(
                MaterialPageRoute(builder: (_) => const HomeScreen()),
              );
            },
          );
        },
      ),
    );
  }
}

class HomeScreen extends StatelessWidget {
  const HomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final themeProvider = Provider.of<ThemeProvider>(context, listen: false);
    return Scaffold(
      appBar: AppBar(
        title: const Text('NdalaFlow'),
        actions: [
          IconButton(
            icon: const Icon(Icons.brightness_6),
            onPressed: () => themeProvider.toggleTheme(),
            tooltip: 'Toggle theme',
          )
        ],
      ),
      body: const Center(child: Text('Welcome â€” app is buildable now')),
    );
  }
}